breaks = c(seq(-180000, 0, by = 30000) - 10000,
seq(0, 180000, by = 30000) + 10000
),
labels = c(rev(seq(0, 180000, by = 30000)),
seq(0, 180000, by = 30000))) +
#theme_tufte()  +  # Tufte theme from ggfortify
theme(plot.title = element_text(hjust = .5),
axis.ticks = element_blank(),
axis.text.y = element_blank()
) +   # Centre plot title
scale_fill_brewer(palette = "Dark2") +
geom_label(aes(x = `Grupos quinquenales de edad`, y = 0, label = `Grupos quinquenales de edad`),
inherit.aes = F, family = "Arial",
size = 3.5, label.padding = unit(0.0, "lines"), label.size = 0,
label.r = unit(0.0, "lines"), fill = "#FFFFFF", alpha = 0.9, color = "#5D646F")
### Grafica ----
ggplot(pop, aes(x = `Grupos quinquenales de edad`,
y = `Poblacion por Sexo`,
fill = Sexo)) +
geom_linerange(data = subset(pop, Sexo == "Hombres") %>% mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),
aes(ymin = -10000, ymax = -10000 +`Poblacion por Sexo`),
stat = "identity", size = 5, color = "blue") +
geom_linerange(data = subset(pop, Sexo == "Mujeres"),
aes(ymin = 10000, ymax = 10000+`Poblacion por Sexo`),
stat = "identity", size = 5, color = "pink") +
coord_flip()  +
scale_y_continuous(#breaks = seq(-180000, 180000, by = 30000)
breaks = c(seq(-180000, 0, by = 30000) - 10000,
seq(0, 180000, by = 30000) + 10000
),
labels = c(rev(seq(0, 180000, by = 30000)),
seq(0, 180000, by = 30000))) +
#theme_tufte()  +  # Tufte theme from ggfortify
theme(plot.title = element_text(hjust = .5),
axis.ticks = element_blank(),
axis.text.y = element_blank()
) +   # Centre plot title
scale_fill_brewer(palette = "Dark2") +
geom_label(aes(x = `Grupos quinquenales de edad`, y = 0, label = `Grupos quinquenales de edad`),
inherit.aes = F, family = "Arial",
size = 3.5, label.padding = unit(0.0, "lines"), label.size = 0,
label.r = unit(0.0, "lines"), fill = "#FFFFFF", alpha = 0.9, color = "#5D646F")
knitr::opts_chunk$set(echo = TRUE)
curl::curl_download(url = "https://www.inegi.org.mx/contenidos/programas/intercensal/2015/tabulados/01_poblacion_mor.xls", destfile = "mor_pop.xls")
# Leemos datos
# Por tamaño de localidad
bd <- read_xls("mor_pop.xls", sheet = 2, skip = 6)
library(readxl)
# Leemos datos
# Por tamaño de localidad
bd <- read_xls("mor_pop.xls", sheet = 2, skip = 6)
# Librerias
library(tidyverse)
library(tidyr)
# Procesamos datos
(pop <- bd %>%
# Filtramos los renglones vacios,
filter(!is.na(Estimador) &
Estimador == "Valor" &
`Tamaño de localidad` == "Total" &
`Grupos quinquenales de edad` != "Total") %>%
pivot_longer(cols = c("Hombres", "Mujeres"),
names_to = "Sexo",
values_to = "Poblacion por Sexo"))
# Librerias
library(tidyverse)
library(tidyr)
# Procesamos datos
(pop <- bd %>%
# Filtramos los renglones vacios,
filter(!is.na(Estimador) &
Estimador == "Valor" &
`Tamaño de localidad` == "Total" &
`Grupos quinquenales de edad` != "Total") %>%
pivot_longer(cols = c("Hombres", "Mujeres"),
names_to = "Sexo",
values_to = "Poblacion por Sexo"))
### Grafica ----
ggplot(pop, aes(x = `Grupos quinquenales de edad`,
y = `Poblacion por Sexo`,
fill = Sexo)) +
geom_linerange(data = subset(pop, Sexo == "Hombres") %>% mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),
aes(ymin = -10000, ymax = -10000 +`Poblacion por Sexo`),
stat = "identity", size = 5, color = "blue") +
geom_linerange(data = subset(pop, Sexo == "Mujeres"),
aes(ymin = 10000, ymax = 10000+`Poblacion por Sexo`),
stat = "identity", size = 5, color = "pink") +
coord_flip()  +
scale_y_continuous(#breaks = seq(-180000, 180000, by = 30000)
breaks = c(seq(-180000, 0, by = 30000) - 10000,
seq(0, 180000, by = 30000) + 10000
),
labels = c(rev(seq(0, 180000, by = 30000)),
seq(0, 180000, by = 30000))) +
#theme_tufte()  +  # Tufte theme from ggfortify
theme(plot.title = element_text(hjust = .5),
axis.ticks = element_blank(),
axis.text.y = element_blank()
) +   # Centre plot title
scale_fill_brewer(palette = "Dark2") +
geom_label(aes(x = `Grupos quinquenales de edad`, y = 0, label = `Grupos quinquenales de edad`),
inherit.aes = F, family = "Arial",
size = 3.5, label.padding = unit(0.0, "lines"), label.size = 0,
label.r = unit(0.0, "lines"), fill = "#FFFFFF", alpha = 0.9, color = "#5D646F")
### Grafica ----
ggplot(pop, aes(x = `Grupos quinquenales de edad`,
y = `Poblacion por Sexo`,
fill = Sexo)) +
geom_bar(data = subset(pop, Sexo == "Hombres") %>% mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),
aes(ymin = -10000, ymax = -10000 +`Poblacion por Sexo`),
stat = "identity", width = 2.5, color = "blue") +
geom_linerange(data = subset(pop, Sexo == "Mujeres"),
aes(ymin = 10000, ymax = 10000+`Poblacion por Sexo`),
stat = "identity", width = 2.5, color = "pink")
### Grafica ----
ggplot(pop, aes(x = `Grupos quinquenales de edad`,
y = `Poblacion por Sexo`,
fill = Sexo)) +
geom_bar(data = subset(pop, Sexo == "Hombres") %>% mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),
aes(ymin = -10000, ymax = -10000 +`Poblacion por Sexo`),
stat = "identity", width = 2.5, color = "blue") +
geom_linerange(data = subset(pop, Sexo == "Mujeres"),
aes(ymin = 10000, ymax = 10000+`Poblacion por Sexo`),
stat = "identity", width = 2.5, color = "pink")
### Grafica ----
ggplot(pop, aes(x = `Grupos quinquenales de edad`,
y = `Poblacion por Sexo`,
fill = Sexo)) +
geom_bar(data = subset(pop, Sexo == "Hombres") %>% mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),
stat = "identity", width = 2.5, color = "blue") +
geom_linerange(data = subset(pop, Sexo == "Mujeres"),
stat = "identity", width = 2.5, color = "pink")
### Grafica ----
ggplot(pop, aes(x = `Grupos quinquenales de edad`,
y = `Poblacion por Sexo`,
fill = Sexo)) +
geom_bar(data = subset(pop, Sexo == "Hombres") %>% mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),
stat = "identity", width = 2.5, color = "blue") +
geom_bar(data = subset(pop, Sexo == "Mujeres"),
stat = "identity", width = 2.5, color = "pink")
### Grafica ----
ggplot(pop, aes(x = `Grupos quinquenales de edad`,
y = `Poblacion por Sexo`,
fill = Sexo)) +
geom_bar(data = subset(pop, Sexo == "Hombres") %>% mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),
stat = "identity", width = 2.5, fill = "blue") +
geom_bar(data = subset(pop, Sexo == "Mujeres"),
stat = "identity", width = 2.5, fill = "pink")
### Grafica ----
ggplot(pop, aes(x = `Grupos quinquenales de edad`,
y = `Poblacion por Sexo`,
fill = Sexo)) +
geom_bar(data = subset(pop, Sexo == "Hombres") %>% mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),
stat = "identity", width = 1.5, fill = "blue") +
geom_bar(data = subset(pop, Sexo == "Mujeres"),
stat = "identity", width = 1.5, fill = "pink")
### Grafica ----
ggplot(pop, aes(x = `Grupos quinquenales de edad`,
y = `Poblacion por Sexo`,
fill = Sexo)) +
geom_bar(data = subset(pop, Sexo == "Hombres") %>% mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),
stat = "identity", width = 1.5, fill = "blue") +
geom_bar(data = subset(pop, Sexo == "Mujeres"),
stat = "identity", width = 1.5, fill = "pink") +
coord_flip()
### Grafica ----
ggplot(pop, aes(x = `Grupos quinquenales de edad`,
y = `Poblacion por Sexo`,
fill = Sexo)) +
geom_bar(data = subset(pop, Sexo == "Hombres") %>% mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),
stat = "identity", width = 0.5, fill = "blue") +
geom_bar(data = subset(pop, Sexo == "Mujeres"),
stat = "identity", width = 0.5, fill = "pink") +
coord_flip()
# Valores maximos de población:
max(pop$`Poblacion por Sexo`)
pop
View(pop)
# Obtenemos los puntos donde se van a poner las escalas de la población.
seq(0, 100000, by = 20000)
seq(-100000, -20000, by = 20000)
c(seq(0, 100000, by = 20000), seq(-100000, -20000, by = 20000))
# Secuencia de puntos donde se van a poner las escalas del eje x
c(seq(0, 100000, by = 20000), seq(-100000, -20000, by = 20000))
# Secuencia de puntos donde se van a poner las escalas del eje x
c(seq(-100000, -20000, by = 20000), seq(0, 100000, by = 20000))
# LABELS
c(seq(-100000, -20000, by = 20000) * -1, seq(0, 100000, by = 20000))
### Grafica ----
ggplot(pop, aes(x = `Grupos quinquenales de edad`,
y = `Poblacion por Sexo`,
fill = Sexo)) +
geom_bar(data = subset(pop, Sexo == "Hombres") %>% mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),
stat = "identity", width = 0.5, fill = "blue") +
geom_bar(data = subset(pop, Sexo == "Mujeres"),
stat = "identity", width = 0.5, fill = "pink") +
coord_flip() +
scale_y_continuous(#breaks = seq(-180000, 180000, by = 30000)
breaks = c(seq(-100000, -20000, by = 20000), seq(0, 100000, by = 20000)),
labels = c(seq(-100000, -20000, by = 20000) * -1, seq(0, 100000, by = 20000)))
breaks = c(seq(-100000, -20000, by = 20000), seq(0, 100000, by = 20000)),
breaks = c(seq(-100000, -20000, by = 20000), seq(0, 100000, by = 20000)),
### Grafica ----
ggplot(pop, aes(x = `Grupos quinquenales de edad`,
y = `Poblacion por Sexo`,
fill = Sexo)) +
geom_bar(data = subset(pop, Sexo == "Hombres") %>% mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),
stat = "identity", width = 0.5, fill = "blue") +
geom_bar(data = subset(pop, Sexo == "Mujeres"),
stat = "identity", width = 0.5, fill = "pink") +
coord_flip() +
scale_y_continuous(#breaks = seq(-180000, 180000, by = 30000)
breaks = c(seq(-100000, -20000, by = 20000), seq(0, 100000, by = 20000)),
labels = c(seq(-100000, -20000, by = 20000) * -1, seq(0, 100000, by = 20000))) +
ylim(c(-10000, 10000))
### Grafica ----
ggplot(pop, aes(x = `Grupos quinquenales de edad`,
y = `Poblacion por Sexo`,
fill = Sexo)) +
geom_bar(data = subset(pop, Sexo == "Hombres") %>% mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),
stat = "identity", width = 0.5, fill = "blue") +
geom_bar(data = subset(pop, Sexo == "Mujeres"),
stat = "identity", width = 0.5, fill = "pink") +
coord_flip() +
scale_y_continuous(#breaks = seq(-180000, 180000, by = 30000)
breaks = c(seq(-100000, -20000, by = 20000), seq(0, 100000, by = 20000)),
labels = c(seq(-100000, -20000, by = 20000) * -1, seq(0, 100000, by = 20000))) +
ylim(-100000, 100000)
### Grafica ----
ggplot(pop, aes(x = `Grupos quinquenales de edad`,
y = `Poblacion por Sexo`,
fill = Sexo)) +
geom_bar(data = subset(pop, Sexo == "Hombres") %>% mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),
stat = "identity", width = 0.5, fill = "blue") +
geom_bar(data = subset(pop, Sexo == "Mujeres"),
stat = "identity", width = 0.5, fill = "pink") +
coord_flip() +
ylim(-100000, 100000) +
scale_y_continuous(#breaks = seq(-180000, 180000, by = 30000)
breaks = c(seq(-100000, -20000, by = 20000), seq(0, 100000, by = 20000)),
labels = c(seq(-100000, -20000, by = 20000) * -1, seq(0, 100000, by = 20000)))
### Grafica ----
ggplot(pop, aes(x = `Grupos quinquenales de edad`,
y = `Poblacion por Sexo`,
fill = Sexo)) +
geom_linerange(data = subset(pop, Sexo == "Hombres") %>% mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),
aes(ymin = -10000, ymax = -10000 +`Poblacion por Sexo`),
stat = "identity", size = 5, color = "blue") +
geom_linerange(data = subset(pop, Sexo == "Mujeres"),
aes(ymin = 10000, ymax = 10000+`Poblacion por Sexo`),
stat = "identity", size = 5, color = "pink") +
coord_flip()  +
scale_y_continuous(#breaks = seq(-180000, 180000, by = 30000)
breaks = c(seq(-180000, 0, by = 30000) - 10000,
seq(0, 180000, by = 30000) + 10000
),
labels = c(rev(seq(0, 180000, by = 30000)),
seq(0, 180000, by = 30000))) +
#theme_tufte()  +  # Tufte theme from ggfortify
theme(plot.title = element_text(hjust = .5),
axis.ticks = element_blank(),
axis.text.y = element_blank()
) +   # Centre plot title
scale_fill_brewer(palette = "Dark2") +
geom_label(aes(x = `Grupos quinquenales de edad`, y = 0, label = `Grupos quinquenales de edad`),
inherit.aes = F, family = "Arial",
size = 3.5, label.padding = unit(0.0, "lines"), label.size = 0,
label.r = unit(0.0, "lines"), fill = "#FFFFFF", alpha = 0.9, color = "#5D646F")
### Grafica ----
ggplot(pop, aes(x = `Grupos quinquenales de edad`,
y = `Poblacion por Sexo`,
fill = Sexo)) +
geom_col(data = subset(pop, Sexo == "Hombres") %>% mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),
#stat = "identity",
width = 0.5, fill = "blue") +
geom_col(data = subset(pop, Sexo == "Mujeres"),
#       stat = "identity",
width = 0.5, fill = "pink") +
coord_flip() +
scale_y_continuous(#breaks = seq(-180000, 180000, by = 30000)
breaks = c(seq(-100000, -20000, by = 20000), seq(0, 100000, by = 20000)),
labels = c(seq(-100000, -20000, by = 20000) * -1, seq(0, 100000, by = 20000)))
?geom_linerange
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.width=12, fig.height=8)
### Grafica ----
desplazamiento <- 10000
### Grafica ----
desplazamiento <- 10000
ggplot(pop, aes(x = `Grupos quinquenales de edad`,
y = `Poblacion por Sexo`,
fill = Sexo)) +
geom_linerange(data = subset(pop, Sexo == "Hombres") %>%
# Convertimos los datos de los Hombres en negativos
mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),
aes(ymin = -desplazamiento, ymax = -desplazamiento +`Poblacion por Sexo`),
stat = "identity", size = 5, color = "blue") +
geom_linerange(data = subset(pop, Sexo == "Mujeres"),
aes(ymin = desplazamiento, ymax = desplazamiento  +`Poblacion por Sexo`),
stat = "identity", size = 5, color = "pink") +
coord_flip()  +
scale_y_continuous(#breaks = seq(-180000, 180000, by = 30000)
breaks = c(seq(-180000, 0, by = 30000) - desplazamiento,
seq(0, 180000, by = 30000) + desplazamiento
),
labels = c(rev(seq(0, 180000, by = 30000)),
seq(0, 180000, by = 30000))) +
#theme_tufte()  +  # Tufte theme from ggfortify
theme(plot.title = element_text(hjust = .5),
axis.ticks = element_blank(),
axis.text.y = element_blank()
) +   # Centre plot title
scale_fill_brewer(palette = "Dark2") +
geom_label(aes(x = `Grupos quinquenales de edad`, y = 0, label = `Grupos quinquenales de edad`),
inherit.aes = F, family = "Arial",
size = 3.5, label.padding = unit(0.0, "lines"), label.size = 0,
label.r = unit(0.0, "lines"), fill = "#FFFFFF", alpha = 0.9, color = "#5D646F")
# Graficamos
(plot <- ggplot(pop, aes(x = `Grupos quinquenales de edad`,
y = `Poblacion por Sexo`,
fill = Sexo)) +
geom_linerange(data = subset(pop, Sexo == "Hombres") %>%
# Convertimos los datos de los Hombres en negativos
mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),
aes(ymin = -desplazamiento, ymax = -desplazamiento +`Poblacion por Sexo`),
stat = "identity", size = 5, color = "blue") +
geom_linerange(data = subset(pop, Sexo == "Mujeres"),
aes(ymin = desplazamiento, ymax = desplazamiento  +`Poblacion por Sexo`),
stat = "identity", size = 5, color = "pink") +
coord_flip()  +
scale_y_continuous(#breaks = seq(-180000, 180000, by = 30000)
breaks = c(seq(-180000, 0, by = 30000) - desplazamiento,
seq(0, 180000, by = 30000) + desplazamiento
),
labels = c(rev(seq(0, 180000, by = 30000)),
seq(0, 180000, by = 30000))) +
#theme_tufte()  +  # Tufte theme from ggfortify
theme(plot.title = element_text(hjust = .5),
axis.ticks = element_blank(),
axis.text.y = element_blank()
) +   # Centre plot title
scale_fill_brewer(palette = "Dark2") +
geom_label(aes(x = `Grupos quinquenales de edad`, y = 0, label = `Grupos quinquenales de edad`),
inherit.aes = F, family = "Arial",
size = 3.5, label.padding = unit(0.0, "lines"), label.size = 0,
label.r = unit(0.0, "lines"), fill = "#FFFFFF", alpha = 0.9, color = "#5D646F"))
plotly::ggplotly(plot)
# BREAKS
c(seq(-180000, 0, by = 30000) - desplazamiento,
seq(0, 180000, by = 30000) + desplazamiento)
# LABELS
c(rev(seq(0, 180000, by = 30000)), seq(0, 180000, by = 30000))
# Graficamos
ggplot(pop, aes(x = `Grupos quinquenales de edad`,
y = `Poblacion por Sexo`,
fill = Sexo)) +
geom_linerange(data = subset(pop, Sexo == "Hombres") %>%
# Convertimos los datos de los Hombres en negativos
mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),
aes(ymin = -desplazamiento, ymax = -desplazamiento +`Poblacion por Sexo`),
#stat = "identity",
size = 5, color = "blue") +
geom_linerange(data = subset(pop, Sexo == "Mujeres"),
aes(ymin = desplazamiento, ymax = desplazamiento  +`Poblacion por Sexo`),
#stat = "identity",
size = 5, color = "pink") +
# Cambiamos el orden de los ejes de la graficas
coord_flip()  +
scale_y_continuous(#breaks = seq(-180000, 180000, by = 30000)
breaks = c(seq(-180000, 0, by = 30000) - desplazamiento,
seq(0, 180000, by = 30000) + desplazamiento
),
labels = c(rev(seq(0, 180000, by = 30000)),
seq(0, 180000, by = 30000))) +
#theme_tufte()  +  # Tufte theme from ggfortify
theme(plot.title = element_text(hjust = .5),
axis.ticks = element_blank(),
axis.text.y = element_blank()
) +   # Centre plot title
scale_fill_brewer(palette = "Dark2") +
geom_label(aes(x = `Grupos quinquenales de edad`, y = 0, label = `Grupos quinquenales de edad`),
inherit.aes = F, family = "Arial",
size = 3.5, label.padding = unit(0.0, "lines"), label.size = 0,
label.r = unit(0.0, "lines"), fill = "#FFFFFF", alpha = 0.9, color = "#5D646F")
plotly::ggplotly(plt)
### Grafica ----
(plt <- ggplot(pop, aes(x = `Grupos quinquenales de edad`,
y = `Poblacion por Sexo`,
fill = Sexo)) +
# Seccion de HOMBRES
geom_col(data = subset(pop, Sexo == "Hombres") %>%
# Convertimos los datos de los Hombres en negativos
mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),
width = 0.5, fill = "blue") +
# Seccion de MUJERES
geom_col(data = subset(pop, Sexo == "Mujeres"),
width = 0.5, fill = "pink") +
# Cambio de ejes de coordenadas
coord_flip() +
scale_y_continuous(
breaks = c(seq(-100000, -20000, by = 20000), seq(0, 100000, by = 20000)),
labels = c(seq(-100000, -20000, by = 20000) * -1, seq(0, 100000, by = 20000))) )
plotly::ggplotly(plt)
plotly::ggplotly(plt)
# Graficamos
ggplot(pop, aes(x = `Grupos quinquenales de edad`,
y = `Poblacion por Sexo`,
fill = Sexo)) +
geom_linerange(data = subset(pop, Sexo == "Hombres") %>%
# Convertimos los datos de los Hombres en negativos
mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),
aes(ymin = -desplazamiento,
ymax = -desplazamiento +`Poblacion por Sexo`),
size = 5,
color = "blue") +
geom_linerange(data = subset(pop, Sexo == "Mujeres"),
aes(ymin = desplazamiento,
ymax = desplazamiento  +`Poblacion por Sexo`),
size = 5,
color = "pink") +
# Cambiamos el orden de los ejes de la graficas
coord_flip()  +
scale_y_continuous(
breaks = c(seq(-180000, 0, by = 30000) - desplazamiento,
seq(0, 180000, by = 30000) + desplazamiento),
labels = c(rev(seq(0, 180000, by = 30000)),
seq(0, 180000, by = 30000))) +
# Eliminamos el texto del eje x volteado
theme(plot.title = element_text(hjust = .5),
axis.ticks = element_blank(),
axis.text.y = element_blank()
) +   # Centre plot title
# Aniadimos la escala de texto en el centro.
geom_label(aes(x = `Grupos quinquenales de edad`,
y = 0,
label = `Grupos quinquenales de edad`),
# Caracteristicas del texto
family = "Arial",
size = 3.5,
label.padding = unit(0.0, "lines"),
label.size = 0,
label.r = unit(0.0, "lines"),
fill = "#FFFFFF",
alpha = 0.9,
color = "#5D646F")
# Checamos la base
pop %>%
DT::datatable()
# Checamos la base
pop %>%
DT::datatable(options = list(
language = list(url'//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json'),
# Checamos la base
pop %>%
DT::datatable(options = list(
language = list(url'//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json'),
# Checamos la base
pop %>%
DT::datatable(options = list(
language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json'),
pageLength = 5))
# BREAKS
c(seq(-180000, 0, by = 30000) - desplazamiento,
seq(0, 180000, by = 30000) + desplazamiento)
# LABELS
c(rev(seq(0, 180000, by = 30000)), seq(0, 180000, by = 30000))
# BREAKS
c(seq(-180000, 0, by = 30000) - desplazamiento,
seq(0, 180000, by = 30000) + desplazamiento)
# BREAKS
c(seq(-180000, 0, by = 30000) - desplazamiento,
seq(0, 180000, by = 30000) + desplazamiento)
### Grafica ----
ggplot(pop, aes(x = `Grupos quinquenales de edad`,
y = `Poblacion por Sexo`,
fill = Sexo)) +
geom_bar(data = subset(pop, Sexo == "Hombres") %>% mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),
stat = "identity", width = 0.5, fill = "blue") +
geom_bar(data = subset(pop, Sexo == "Mujeres"),
stat = "identity", width = 0.5, fill = "pink") +
coord_flip()
# Valores maximos de población:
max(pop$`Poblacion por Sexo`)
# BREAKS
# Obtenemos los puntos donde se van a poner las escalas de la población.
seq(0, 100000, by = 20000)
seq(-100000, -20000, by = 20000)
# Secuencia de puntos donde se van a poner las escalas del eje x
c(seq(-100000, -20000, by = 20000), seq(0, 100000, by = 20000))
# LABELS
c(seq(-100000, -20000, by = 20000) * -1, seq(0, 100000, by = 20000))
# No correr! Abajo está completo.
ggplot(pop, aes(x = `Grupos quinquenales de edad`,
y = `Poblacion por Sexo`,
fill = Sexo))
### Grafica ----
(plt <- ggplot(pop, aes(x = `Grupos quinquenales de edad`,
y = `Poblacion por Sexo`,
fill = Sexo)) +
# Seccion de HOMBRES
geom_col(data = subset(pop, Sexo == "Hombres") %>%
# Convertimos los datos de los Hombres en negativos
mutate(`Poblacion por Sexo` = -`Poblacion por Sexo`),
width = 0.5, fill = "blue") +
# Seccion de MUJERES
geom_col(data = subset(pop, Sexo == "Mujeres"),
width = 0.5, fill = "pink") +
# Cambio de ejes de coordenadas
coord_flip() +
scale_y_continuous(
breaks = c(seq(-100000, -20000, by = 20000), seq(0, 100000, by = 20000)),
labels = c(seq(-100000, -20000, by = 20000) * -1, seq(0, 100000, by = 20000))) )
